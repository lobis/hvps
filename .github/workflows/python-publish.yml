name: Upload Python Package to PyPI

on:
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package ðŸ“¦
        run: python -m build

      - name: Install package ðŸ“¦
        run: python -m pip install .

      - name: Verify package version matches tag
        run: |
          python -c "import hvps; assert '${{ github.event.release.tag_name }}' == 'v' + hvps.__version__"

      - name: Cache dist directory
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ github.sha }}-${{ github.run_id}}-${{ github.run_number }}

  publish-to-pypi-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Restore dist from cache
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ github.sha }}-${{ github.run_id}}-${{ github.run_number }}

      - name: Publish package ðŸ“¦ to TEST PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    needs: [ build, publish-to-pypi-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Restore dist from cache
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-dist-${{ github.sha }}-${{ github.run_id}}-${{ github.run_number }}

      - name: Publish package ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
